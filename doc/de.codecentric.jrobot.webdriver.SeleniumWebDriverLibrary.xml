<?xml version="1.0" encoding="UTF-8"?>
<keywordspec generated="20130211 20:30:24" format="ROBOT" type="library" name="de.codecentric.jrobot.webdriver.SeleniumWebDriverLibrary">
<version></version>
<scope>global</scope>
<namedargs>no</namedargs>
<doc>Experimental Robot library to access the Selenium via WebDriver.</doc>
<kw name="click">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
</arguments>
<doc>Click this element. If this causes a new page to load, this method will attempt to block until the page has loaded. At this point, you should discard all references to this element and any further operations performed on this element will throw a StaleElementReferenceException unless you know the element and the page will still be present. If click() causes a new page to be loaded via an event or is done by sending a native event then the method will *not* wait for it to be loaded and the caller should verify that a new page has been loaded. There are some preconditions for an element to be clicked. The element must be visible and it must have a height and width greater then 0.</doc>
</kw>
<kw name="close all browsers">
<arguments>
</arguments>
<doc>Close all browsers</doc>
</kw>
<kw name="close browser">
<arguments>
<arg>browser=""</arg>
</arguments>
<doc>Close the given browser. Parameters:
 - _browser_: Key of the browser.  If no browser is given, close the current one.</doc>
</kw>
<kw name="execute JavaScript in browser">
<arguments>
<arg>*script</arg>
</arguments>
<doc>Executes JavaScript in the context of the currently selected frame or window. The script fragment provided will be executed as the body of an anonymous function.Within the script, use document to refer to the current document. Note that local variables will not be available once the script has finished executing, though global variables will persist.

Arguments:
 - script: One or several Strings, they will be concatenated before execution.

Returns: What you give to "return" in the script.</doc>
</kw>
<kw name="execute JavaScript locally">
<arguments>
<arg>*script</arg>
</arguments>
<doc>Executes JavaScript in the test driver (with the builtin script engine of the JVM). The script will be evaluated as an expression, the result of the expression is returned. All scripts will be evaluated in the same ScriptEngine, global variables will persist. Don't use a return statement at the end of the script.

Arguments:
 - script: One or several Strings, they will be concatenated before execution.

Returns: What you give to "return" in the script.</doc>
</kw>
<kw name="get attribute">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
<arg>attribute</arg>
</arguments>
<doc>Get the value of a the given attribute of the element. Will return the current value, even if this has been modified after the page has been loaded. More exactly, this method will return the value of the given attribute, unless that attribute is not present, in which case the value of the property with the same name is returned. If neither value is set, null is returned. The "style" attribute is converted as best can be to a text representation with a trailing semi-colon. The following are deemed to be "boolean" attributes, and will return either "true" or null: async, autofocus, autoplay, checked, compact, complete, controls, declare, defaultchecked, defaultselected, defer, disabled, draggable, ended, formnovalidate, hidden, indeterminate, iscontenteditable, ismap, itemscope, loop, multiple, muted, nohref, noresize, noshade, novalidate, nowrap, open, paused, pubdate, readonly, required, reversed, scoped, seamless, seeking, selected, spellcheck, truespeed, willvalidate Finally, the following commonly mis-capitalized attribute/property names are evaluated as expected: - "class" - "readonly"
Parameters:
 - _strategy_: Location strategy, e.g. "id"
 - _key_: Key part of location strategy - _attribute_: Name of the attribute
Returns: The attribute's current value or null if the value is not set.</doc>
</kw>
<kw name="get page source">
<arguments>
</arguments>
<doc>Get the source of the last loaded page. If the page has been modified after loading (for example, by Javascript) there is no guarantee that the returned text is that of the modified page. Please consult the documentation of the particular driver being used to determine whether the returned text reflects the current state of the page or the text last sent by the web server. The page source returned is a representation of the underlying DOM: do not expect it to be formatted or escaped in the same way as the response sent from the web server. Think of it as an artist's impression.</doc>
</kw>
<kw name="get text">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
</arguments>
<doc>Returns the text of element identified by locator.</doc>
</kw>
<kw name="get title">
<arguments>
</arguments>
<doc>Return: The title of the current page, with leading and trailing whitespace stripped, or null if one is not already set</doc>
</kw>
<kw name="get value">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
</arguments>
<doc>Get the value of the value attribute of the element, shortcut for getAttribute strategy, key, "value". Will return the current value, even if this has been modified after the page has been loaded.
 Parameters:
 - _strategy_: Location strategy, e.g. "id"
 - _key_: Key part of location strategy
Returns: The attribute's current value or null if the value is not set.</doc>
</kw>
<kw name="get window handle">
<arguments>
</arguments>
<doc>Return an opaque handle to this window that uniquely identifies it within this driver instance. This can be used to switch to this window at a later date.</doc>
</kw>
<kw name="input text">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
<arg>text</arg>
</arguments>
<doc>Types the given text into text field identified by locator.</doc>
</kw>
<kw name="navigate back">
<arguments>
</arguments>
<doc>Move back a single "item" in the browser's history.</doc>
</kw>
<kw name="navigate forward">
<arguments>
</arguments>
<doc>Move a single "item" forward in the browser's history. Does nothing if we are on the latest page viewed.</doc>
</kw>
<kw name="navigate to">
<arguments>
<arg>url</arg>
</arguments>
<doc>Load a new web page in the current browser window. This is done using an HTTP GET operation, and the method will block until the load is complete. This will follow redirects issued either by the server or as a meta-redirect from within the returned HTML. Should a meta-redirect "rest" for any duration of time, it is best to wait until this timeout is over,since should the underlying page change whilst your test is executing the results of future calls against this interface will be against the freshly loaded page.</doc>
</kw>
<kw name="open browser">
<arguments>
<arg>url</arg>
<arg>browser</arg>
</arguments>
<doc>Open a new browser, make it the current one, navigate to &lt;code&gt;url&lt;/code&gt;.Parameters:
- _url_: Where to start.
- _browser_: Name of the browser, see {@link WebDriverFactory} for supported browsers.
Return:
  Key of the browser.</doc>
</kw>
<kw name="select currentElement">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
</arguments>
<doc>Select a different element of the current page as toplevel element for further actions.</doc>
</kw>
<kw name="select from list">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
<arg>text</arg>
</arguments>
<doc>Select an item in a drop down list identified by locator.
The item is identified by the visible text.</doc>
</kw>
<kw name="set screenshot directory">
<arguments>
<arg>path</arg>
</arguments>
<doc>Set a new directory for screenshots. 

Return: The absolute path of the new directory for screenshots.</doc>
</kw>
<kw name="submit">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
</arguments>
<doc>If the element is a form, or an element within a form, then this will be submitted to the remote server. If this causes the current page to change, then this method will block until the new page is loaded.</doc>
</kw>
<kw name="switch to alert">
<arguments>
</arguments>
<doc>Switches to the currently active modal dialog for this particular driver instance.</doc>
</kw>
<kw name="switch to browser">
<arguments>
<arg>browser</arg>
</arguments>
<doc>Parameters:
 - _browser_: Make this the current browser.</doc>
</kw>
<kw name="switch to default content">
<arguments>
</arguments>
<doc>Selects either the first frame on the page, or the main document when a page contains iframes.</doc>
</kw>
<kw name="switch to frame">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
</arguments>
<doc>Select a frame.</doc>
</kw>
<kw name="switch to window">
<arguments>
<arg>nameOrHandle</arg>
</arguments>
<doc>Switch the focus of future commands for this driver to the window with the given name/handle.</doc>
</kw>
<kw name="take screenshot">
<arguments>
</arguments>
<doc>Return: The absolute filename of the screenshot.</doc>
</kw>
<kw name="textfield value should be">
<arguments>
<arg>strategy</arg>
<arg>key</arg>
<arg>expected</arg>
</arguments>
<doc>Verifies the value in text field identified by strategy / key is exactly expected.</doc>
</kw>
</keywordspec>
